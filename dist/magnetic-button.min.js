/*!
 * @phucbm/magnetic-button 1.0.1
 * https://phucbm.github.io/magnetic-button/
 *
 * @license MIT
 * @author: phucbm, https://github.com/phucbm
 */
"use strict";var MagneticButton=(()=>{var l=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var E=(n,t)=>{for(var e in t)l(n,e,{get:t[e],enumerable:!0})},w=(n,t,e,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of M(t))!b.call(n,s)&&s!==e&&l(n,s,{get:()=>t[s],enumerable:!(i=v(t,s))||i.enumerable});return n};var x=n=>w(l({},"__esModule",{value:!0}),n);var L={};E(L,{default:()=>z});function y(n,t,e=.1){return n*(1-e)+t*e}var c=y;var a=class a{constructor(t,e={}){this.settings={activeClass:"magnetizing",attraction:.3,distance:50,speed:.1,disableOnTouch:!0,onEnter:()=>{},onExit:()=>{},onUpdate:()=>{}};this.isEnter=!1;this.lerpPos={x:0,y:0};this.target=null;this.boundMagnetize=null;if(!t){document.querySelectorAll("[data-magnetic]").forEach(r=>{a.initializedElements.has(r)||new a(r,e)});return}if(a.initializedElements.has(t))return;a.initializedElements.add(t);let i=parseFloat(t.getAttribute("data-distance")||""),s=parseFloat(t.getAttribute("data-attraction")||""),d=parseFloat(t.getAttribute("data-speed")||"");if(this.settings={...this.settings,attraction:isNaN(s)?e.attraction??this.settings.attraction:s,distance:isNaN(i)?e.distance??this.settings.distance:i,speed:isNaN(d)?e.speed??this.settings.speed:d,...e},this.settings.disableOnTouch&&a.isTouchDevice()){a.initializedElements.delete(t);return}this.target=t,this.boundMagnetize=r=>this.magnetize(t,r),window.addEventListener("mousemove",this.boundMagnetize),t.classList.add("is-magnetized")}static isTouchDevice(){return window.matchMedia("(hover: none) and (pointer: coarse)").matches}magnetize(t,e){let i=this.calculateCoordinates(t,e.clientX,e.clientY);i.distance<this.settings.distance?(this.animateButton(t,i.deltaX,i.deltaY),this.isEnter||(this.isEnter=!0,t.classList.add(this.settings.activeClass),this.settings.onEnter(i)),this.settings.onUpdate(i)):(this.animateButton(t,0,0),this.isEnter&&(this.isEnter=!1,t.classList.remove(this.settings.activeClass),this.settings.onExit(i)))}animateButton(t,e,i){this.lerpPos.x=c(this.lerpPos.x,e,this.settings.speed),this.lerpPos.y=c(this.lerpPos.y,i,this.settings.speed),t.style.transform=`translate(${this.lerpPos.x}px, ${this.lerpPos.y}px)`}calculateCoordinates(t,e,i){let s=t.getBoundingClientRect(),d=s.left+t.offsetWidth/2,r=s.top+t.offsetHeight/2,m=(e-d)*this.settings.attraction,g=(i-r)*this.settings.attraction,u=Math.max(0,Math.abs(e-d)-t.offsetWidth/2),p=Math.max(0,Math.abs(i-r)-t.offsetHeight/2),f=Math.sqrt(u*u+p*p);return{deltaX:m,deltaY:g,distance:f}}getMagnetizedArea(){return this.target?{width:this.target.offsetWidth+this.settings.distance*2,height:this.target.offsetHeight+this.settings.distance*2}:{width:0,height:0}}destroy(){this.boundMagnetize&&(window.removeEventListener("mousemove",this.boundMagnetize),this.boundMagnetize=null),this.target&&(this.target.classList.remove("is-magnetized",this.settings.activeClass),this.target.style.transform="",a.initializedElements.delete(this.target),this.target=null),this.isEnter=!1,this.lerpPos={x:0,y:0}}};a.initializedElements=new WeakSet;var o=a;typeof window<"u"&&typeof document<"u"&&(document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>new o):new o);new o;var h=o;h.init=(n,t)=>new o(n,t);var z=h;typeof window<"u"&&(window.MagneticButton=h);return x(L);})();
/*! Bundled license information:

@phucbm/lerp/dist/index.js:
  (*!
   * @phucbm/lerp 1.0.1
   * https://github.com/phucbm/lerp#readme
   *
   * @license MIT
   * @author: phucbm, https://github.com/phucbm
   *)
*/
//# sourceMappingURL=magnetic-button.min.js.map