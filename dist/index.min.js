/*!
 * @phucbm/magnetic-button 1.0.1
 * https://phucbm.github.io/magnetic-button/
 *
 * @license MIT
 * @author: phucbm, https://github.com/phucbm
 */
import c from"@phucbm/lerp";var s=class s{constructor(t,i={}){this.settings={activeClass:"magnetizing",attraction:.3,distance:50,speed:.1,disableOnTouch:!0,onEnter:()=>{},onExit:()=>{},onUpdate:()=>{}};this.isEnter=!1;this.lerpPos={x:0,y:0};this.target=null;this.boundMagnetize=null;if(!t){document.querySelectorAll("[data-magnetic]").forEach(n=>{s.initializedElements.has(n)||new s(n,i)});return}if(s.initializedElements.has(t))return;s.initializedElements.add(t);let e=parseFloat(t.getAttribute("data-distance")||""),a=parseFloat(t.getAttribute("data-attraction")||""),o=parseFloat(t.getAttribute("data-speed")||"");if(this.settings={...this.settings,attraction:isNaN(a)?i.attraction??this.settings.attraction:a,distance:isNaN(e)?i.distance??this.settings.distance:e,speed:isNaN(o)?i.speed??this.settings.speed:o,...i},this.settings.disableOnTouch&&s.isTouchDevice()){s.initializedElements.delete(t);return}this.target=t,this.boundMagnetize=n=>this.magnetize(t,n),window.addEventListener("mousemove",this.boundMagnetize),t.classList.add("is-magnetized")}static isTouchDevice(){return window.matchMedia("(hover: none) and (pointer: coarse)").matches}magnetize(t,i){let e=this.calculateCoordinates(t,i.clientX,i.clientY);e.distance<this.settings.distance?(this.animateButton(t,e.deltaX,e.deltaY),this.isEnter||(this.isEnter=!0,t.classList.add(this.settings.activeClass),this.settings.onEnter(e)),this.settings.onUpdate(e)):(this.animateButton(t,0,0),this.isEnter&&(this.isEnter=!1,t.classList.remove(this.settings.activeClass),this.settings.onExit(e)))}animateButton(t,i,e){this.lerpPos.x=c(this.lerpPos.x,i,this.settings.speed),this.lerpPos.y=c(this.lerpPos.y,e,this.settings.speed),t.style.transform=`translate(${this.lerpPos.x}px, ${this.lerpPos.y}px)`}calculateCoordinates(t,i,e){let a=t.getBoundingClientRect(),o=a.left+t.offsetWidth/2,n=a.top+t.offsetHeight/2,h=(i-o)*this.settings.attraction,u=(e-n)*this.settings.attraction,r=Math.max(0,Math.abs(i-o)-t.offsetWidth/2),l=Math.max(0,Math.abs(e-n)-t.offsetHeight/2),m=Math.sqrt(r*r+l*l);return{deltaX:h,deltaY:u,distance:m}}getMagnetizedArea(){return this.target?{width:this.target.offsetWidth+this.settings.distance*2,height:this.target.offsetHeight+this.settings.distance*2}:{width:0,height:0}}destroy(){this.boundMagnetize&&(window.removeEventListener("mousemove",this.boundMagnetize),this.boundMagnetize=null),this.target&&(this.target.classList.remove("is-magnetized",this.settings.activeClass),this.target.style.transform="",s.initializedElements.delete(this.target),this.target=null),this.isEnter=!1,this.lerpPos={x:0,y:0}}};s.initializedElements=new WeakSet;var d=s;typeof window<"u"&&typeof document<"u"&&(document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>new d):new d);var g=d;export{d as MagneticButton,g as default};
//# sourceMappingURL=index.min.js.map